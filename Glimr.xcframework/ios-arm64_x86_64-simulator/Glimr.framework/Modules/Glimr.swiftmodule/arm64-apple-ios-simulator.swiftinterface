// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios15.3-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name Glimr
import AdSupport
import AppTrackingTransparency
import SystemConfiguration.CaptiveNetwork
import CoreLocation
import CoreTelephony
import Foundation
@_exported import Glimr
import Network
import Swift
import SystemConfiguration
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public typealias TagsCompletionHandler = ([Swift.String : Any]?, (any Swift.Error)?) -> ()
public class GLAudienceManager {
  public init(apiToken: Foundation.UUID, geoFixDecimals: Swift.Int = 5, trackId: Swift.String? = nil, requestTrackingAuthorization: Swift.Bool = false, trackCarrierInfo: Swift.Bool = true, trackBatteryInfo: Swift.Bool = true, trackNetworkInfo: Swift.Bool = true)
  public init(apiToken: Foundation.UUID, geoFixDecimals: Swift.Int = 5, trackId: Swift.String? = nil, requestTrackingAuthorization: Swift.Bool = false)
  public func glimrTagsWithCompletion(completionHandler: @escaping Glimr.TagsCompletionHandler)
  public func cachedTags(format: Glimr.GLTagResponseFormat) -> Any?
  @objc deinit
}
public enum GLTagResponseFormat {
  case flat
  case map
  public static func == (a: Glimr.GLTagResponseFormat, b: Glimr.GLTagResponseFormat) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension Glimr.GLTagResponseFormat : Swift.Equatable {}
extension Glimr.GLTagResponseFormat : Swift.Hashable {}
